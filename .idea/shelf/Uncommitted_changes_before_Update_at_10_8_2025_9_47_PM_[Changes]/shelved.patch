Index: app/src/main/java/com/example/project_btl/CartManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_btl;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * CartManager dùng để quản lý giỏ hàng trong bộ nhớ (RAM).\r\n * Đây là Singleton: chỉ tồn tại duy nhất 1 giỏ hàng cho cả ứng dụng.\r\n *\r\n * Lưu ý:\r\n * - Đây chỉ là demo (chưa có database).\r\n * - Khi tắt app, dữ liệu giỏ hàng sẽ mất.\r\n * - Sau này nếu có Database (SQLite, Firebase...) thì chỉ cần chỉnh lại bên trong class này.\r\n */\r\npublic class CartManager {\r\n\r\n    // Instance duy nhất (Singleton)\r\n    private static CartManager instance;\r\n\r\n    private final List<ProductModel> cartList;\r\n\r\n    private CartManager() {\r\n        cartList = new ArrayList<>();\r\n    }\r\n\r\n    // Hàm trả về instance duy nhất\r\n    public static CartManager getInstance() {\r\n        if (instance == null) {\r\n            instance = new CartManager();\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    /**\r\n     * Thêm sản phẩm vào giỏ.\r\n     * Nếu sản phẩm đã có trong giỏ (cùng ID và cùng size) -> cộng dồn số lượng.\r\n     */\r\n    public void addToCart(ProductModel product, String size, int quantity) {\r\n        if (product == null || size == null) return;\r\n\r\n        boolean found = false;\r\n\r\n        for (ProductModel p : cartList) {\r\n            if (p.getId().equals(product.getId()) && size.equals(p.getSelectedSize())) {\r\n                // Nếu đã có -> tăng số lượng\r\n                p.setQuantity(p.getQuantity() + quantity);\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!found) {\r\n            // Nếu chưa có -> tạo bản copy (để tránh ảnh hưởng tới đối tượng gốc)\r\n            ProductModel newItem = new ProductModel(\r\n                    product.getId(),            // id sản phẩm\r\n                    product.getName(),          // tên\r\n                    product.getPrice(),         // giá\r\n                    product.getImage(),         // ảnh\r\n                    product.getRating(),        // rating\r\n                    product.getDescription(),   // mô tả\r\n                    product.getMoreInfor(),     // thông tin thêm\r\n                    quantity,                   // số lượng (mới)\r\n                    size,                       // size đã chọn\r\n                    product.getType()           // loại sản phẩm\r\n            );\r\n            cartList.add(newItem);\r\n        }\r\n    }\r\n\r\n    /** Lấy toàn bộ danh sách giỏ hàng */\r\n    public List<ProductModel> getCartList() {\r\n        return cartList;\r\n    }\r\n\r\n    /** Xoá 1 sản phẩm trong giỏ */\r\n    public void removeFromCart(ProductModel product) {\r\n        cartList.remove(product);\r\n    }\r\n\r\n    /** Xoá toàn bộ giỏ hàng */\r\n    public void clearCart() {\r\n        cartList.clear();\r\n    }\r\n\r\n    /** Tính tổng tiền giỏ hàng (chỉ tính các sản phẩm được check) */\r\n    public long getTotalPrice() {\r\n        long total = 0;\r\n        for (ProductModel p : cartList) {\r\n            if (p.isChecked()) {\r\n                total += p.getPrice() * p.getQuantity();\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/example/project_btl/CartManager.java b/app/src/main/java/com/example/project_btl/CartManager.java
--- a/app/src/main/java/com/example/project_btl/CartManager.java	(revision c189c792b8788adfbc22508b6601d8245aab81b1)
+++ b/app/src/main/java/com/example/project_btl/CartManager.java	(date 1759919657679)
@@ -13,7 +13,6 @@
  * - Sau này nếu có Database (SQLite, Firebase...) thì chỉ cần chỉnh lại bên trong class này.
  */
 public class CartManager {
-
     // Instance duy nhất (Singleton)
     private static CartManager instance;
 
